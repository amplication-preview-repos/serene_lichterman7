/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  ValidateNested,
  IsEnum,
  IsBoolean,
  IsInt,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { Comprovante } from "../../comprovante/base/Comprovante";
import { EnumViagemComprovantesEnviados } from "./EnumViagemComprovantesEnviados";
import { PontoDeEntrega } from "../../pontoDeEntrega/base/PontoDeEntrega";

@ObjectType()
class Viagem {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  aprovadaEm!: Date | null;

  @ApiProperty({
    required: false,
    type: () => Comprovante,
  })
  @ValidateNested()
  @Type(() => Comprovante)
  @IsOptional()
  comprovantes?: Comprovante | null;

  @ApiProperty({
    required: true,
    enum: EnumViagemComprovantesEnviados,
  })
  @IsEnum(EnumViagemComprovantesEnviados)
  @Field(() => EnumViagemComprovantesEnviados, {
    nullable: true,
  })
  comprovantes_enviados?: "PENDENTE" | "ENVIO_PARCIAL" | "ENVIADOS";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  criadoEm!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  deletadoEm!: Date | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  envioConcluido!: boolean;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  idExterno!: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  manifestado!: boolean;

  @ApiProperty({
    required: false,
    type: () => PontoDeEntrega,
  })
  @ValidateNested()
  @Type(() => PontoDeEntrega)
  @IsOptional()
  pontoDeEntregas?: PontoDeEntrega | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  rejeitadaEm!: Date | null;
}

export { Viagem as Viagem };
