/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { ComprovanteWhereUniqueInput } from "../../comprovante/base/ComprovanteWhereUniqueInput";
import { EnumViagemComprovantesEnviados } from "./EnumViagemComprovantesEnviados";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { BooleanFilter } from "../../util/BooleanFilter";
import { IntFilter } from "../../util/IntFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { PontoDeEntregaWhereUniqueInput } from "../../pontoDeEntrega/base/PontoDeEntregaWhereUniqueInput";

@InputType()
class ViagemWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  aprovadaEm?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ComprovanteWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ComprovanteWhereUniqueInput)
  @IsOptional()
  @Field(() => ComprovanteWhereUniqueInput, {
    nullable: true,
  })
  comprovantes?: ComprovanteWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumViagemComprovantesEnviados,
  })
  @IsEnum(EnumViagemComprovantesEnviados)
  @IsOptional()
  @Field(() => EnumViagemComprovantesEnviados, {
    nullable: true,
  })
  comprovantes_enviados?: "PENDENTE" | "ENVIO_PARCIAL" | "ENVIADOS";

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  criadoEm?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  deletadoEm?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  envioConcluido?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: IntFilter,
  })
  @Type(() => IntFilter)
  @IsOptional()
  @Field(() => IntFilter, {
    nullable: true,
  })
  id?: IntFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  idExterno?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: BooleanFilter,
  })
  @Type(() => BooleanFilter)
  @IsOptional()
  @Field(() => BooleanFilter, {
    nullable: true,
  })
  manifestado?: BooleanFilter;

  @ApiProperty({
    required: false,
    type: () => PontoDeEntregaWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PontoDeEntregaWhereUniqueInput)
  @IsOptional()
  @Field(() => PontoDeEntregaWhereUniqueInput, {
    nullable: true,
  })
  pontoDeEntregas?: PontoDeEntregaWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  rejeitadaEm?: DateTimeNullableFilter;
}

export { ViagemWhereInput as ViagemWhereInput };
